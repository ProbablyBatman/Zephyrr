apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.gms.google-services'

def rawBuildNumber = System.getenv("BITRISE_BUILD_NUMBER") ?: "99999"
def buildNumber = Integer.parseInt(rawBuildNumber)

android {
    compileSdkVersion 33
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    defaultConfig {
        applicationId "greenberg.moviedbshell"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode buildNumber
        versionName "1.2.$buildNumber"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        buildTypes.each {
            it.buildConfigField 'String', 'TMDB_API_KEY', "\"$System.env.TMDB_API_KEY\""
        }
    }
    configurations {
        ktlint
    }
    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    namespace 'greenberg.moviedbshell'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    implementation "androidx.appcompat:appcompat:$appCompat_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation "com.google.android.material:material:$appCompat_version"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.media:media:$media_version"

    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_ktx_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_ktx_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ktx_version"

    implementation 'com.google.dagger:dagger:2.44'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt 'com.google.dagger:dagger-compiler:2.44'
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
//    implementation 'androidx.hilt:hilt-*:1.0.0'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    implementation platform('com.google.firebase:firebase-bom:29.3.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'

    ktlint "com.pinterest:ktlint:0.49.1"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}


task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    mainClass.set("com.pinterest.ktlint.Main")
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // to add a baseline to check against prepend following args:
    // "--baseline=ktlint-baseline.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    mainClass.set("com.pinterest.ktlint.Main")
    args "-F", "src/**/*.kt"
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'org.jetbrains.kotlin.android'
